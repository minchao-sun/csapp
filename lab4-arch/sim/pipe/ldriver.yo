                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f49805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f61803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f70801000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax,%rax		# count = 0;
0x034: c0f2feffffffffffffff | 	iaddq $-2, %rdx		# len -= 2
0x03e: 755000000000000000   | 	jge Loop			# if len >= 0, goto Loop
0x047: 70c900000000000000   | 	jmp Rest
0x050:                      | Loop:						# use Loop Unrolling
0x050: 50a70000000000000000 | 	mrmovq (%rdi), %r10		# read val1 from src...
0x05a: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11	# read val2 from src+8...
0x064: 40a60000000000000000 | 	rmmovq %r10, (%rsi)		# store val1 to dst
0x06e: 40b60800000000000000 | 	rmmovq %r11, 8(%rsi)	# store val2 to dst+8
0x078: 62aa                 | 	andq %r10, %r10		# val1 <= 0?
0x07a: 718d00000000000000   | 	jle Test2			# if so, goto Test2:
0x083: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x08d:                      | Test2:
0x08d: 62bb                 | 	andq %r11, %r11		# val2 <= 0?
0x08f: 71a200000000000000   | 	jle Npos			# if so, goto Npos:
0x098: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x0a2:                      | Npos:
0x0a2: c0f71000000000000000 | 	iaddq $16, %rdi		# src += 2
0x0ac: c0f61000000000000000 | 	iaddq $16, %rsi		# dst += 2
0x0b6: c0f2feffffffffffffff | 	iaddq $-2, %rdx		# len -= 2
0x0c0: 755000000000000000   | 	jge Loop			# if len >= 0, goto Loop:
0x0c9:                      | Rest:
0x0c9: c0f20200000000000000 | 	iaddq $2, %rdx		# len += 2
0x0d3: 710501000000000000   | 	jle Done			# if len <= 0, goto Done:
0x0dc: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x0e6: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x0f0: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x0f2: 710501000000000000   | 	jle Done			# if so, goto Done:
0x0fb: c0f00100000000000000 | 	iaddq $1, %rax		# count++
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x105:                      | Done:
0x105: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x106:                      | End:
                            | #/* $end ncopy-ys */
0x106:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x108:                      | 	.align 8
0x108:                      | src:
0x108: 0100000000000000     | 	.quad 1
0x110: 0200000000000000     | 	.quad 2
0x118: 0300000000000000     | 	.quad 3
0x120: 0400000000000000     | 	.quad 4
0x128: 0500000000000000     | 	.quad 5
0x130: 0600000000000000     | 	.quad 6
0x138: f9ffffffffffffff     | 	.quad -7
0x140: f8ffffffffffffff     | 	.quad -8
0x148: f7ffffffffffffff     | 	.quad -9
0x150: f6ffffffffffffff     | 	.quad -10
0x158: 0b00000000000000     | 	.quad 11
0x160: 0c00000000000000     | 	.quad 12
0x168: f3ffffffffffffff     | 	.quad -13
0x170: 0e00000000000000     | 	.quad 14
0x178: 0f00000000000000     | 	.quad 15
0x180: 1000000000000000     | 	.quad 16
0x188: efffffffffffffff     | 	.quad -17
0x190: eeffffffffffffff     | 	.quad -18
0x198: edffffffffffffff     | 	.quad -19
0x1a0: ecffffffffffffff     | 	.quad -20
0x1a8: ebffffffffffffff     | 	.quad -21
0x1b0: 1600000000000000     | 	.quad 22
0x1b8: e9ffffffffffffff     | 	.quad -23
0x1c0: e8ffffffffffffff     | 	.quad -24
0x1c8: 1900000000000000     | 	.quad 25
0x1d0: 1a00000000000000     | 	.quad 26
0x1d8: 1b00000000000000     | 	.quad 27
0x1e0: 1c00000000000000     | 	.quad 28
0x1e8: 1d00000000000000     | 	.quad 29
0x1f0: 1e00000000000000     | 	.quad 30
0x1f8: 1f00000000000000     | 	.quad 31
0x200: e0ffffffffffffff     | 	.quad -32
0x208: 2100000000000000     | 	.quad 33
0x210: deffffffffffffff     | 	.quad -34
0x218: ddffffffffffffff     | 	.quad -35
0x220: dcffffffffffffff     | 	.quad -36
0x228: dbffffffffffffff     | 	.quad -37
0x230: daffffffffffffff     | 	.quad -38
0x238: d9ffffffffffffff     | 	.quad -39
0x240: d8ffffffffffffff     | 	.quad -40
0x248: d7ffffffffffffff     | 	.quad -41
0x250: d6ffffffffffffff     | 	.quad -42
0x258: d5ffffffffffffff     | 	.quad -43
0x260: 2c00000000000000     | 	.quad 44
0x268: d3ffffffffffffff     | 	.quad -45
0x270: d2ffffffffffffff     | 	.quad -46
0x278: 2f00000000000000     | 	.quad 47
0x280: d0ffffffffffffff     | 	.quad -48
0x288: cfffffffffffffff     | 	.quad -49
0x290: ceffffffffffffff     | 	.quad -50
0x298: 3300000000000000     | 	.quad 51
0x2a0: ccffffffffffffff     | 	.quad -52
0x2a8: cbffffffffffffff     | 	.quad -53
0x2b0: caffffffffffffff     | 	.quad -54
0x2b8: c9ffffffffffffff     | 	.quad -55
0x2c0: 3800000000000000     | 	.quad 56
0x2c8: 3900000000000000     | 	.quad 57
0x2d0: 3a00000000000000     | 	.quad 58
0x2d8: 3b00000000000000     | 	.quad 59
0x2e0: 3c00000000000000     | 	.quad 60
0x2e8: 3d00000000000000     | 	.quad 61
0x2f0: 3e00000000000000     | 	.quad 62
0x2f8: 3f00000000000000     | 	.quad 63
0x300: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x310:                      | 	.align 16
0x310:                      | Predest:
0x310: fadebc0000000000     | 	.quad 0xbcdefa
0x318:                      | dest:
0x318: abefcd0000000000     | 	.quad 0xcdefab
0x320: abefcd0000000000     | 	.quad 0xcdefab
0x328: abefcd0000000000     | 	.quad 0xcdefab
0x330: abefcd0000000000     | 	.quad 0xcdefab
0x338: abefcd0000000000     | 	.quad 0xcdefab
0x340: abefcd0000000000     | 	.quad 0xcdefab
0x348: abefcd0000000000     | 	.quad 0xcdefab
0x350: abefcd0000000000     | 	.quad 0xcdefab
0x358: abefcd0000000000     | 	.quad 0xcdefab
0x360: abefcd0000000000     | 	.quad 0xcdefab
0x368: abefcd0000000000     | 	.quad 0xcdefab
0x370: abefcd0000000000     | 	.quad 0xcdefab
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510:                      | Postdest:
0x510: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x518:                      | .align 8
                            | # Run time stack
0x518: 0000000000000000     | 	.quad 0
0x520: 0000000000000000     | 	.quad 0
0x528: 0000000000000000     | 	.quad 0
0x530: 0000000000000000     | 	.quad 0
0x538: 0000000000000000     | 	.quad 0
0x540: 0000000000000000     | 	.quad 0
0x548: 0000000000000000     | 	.quad 0
0x550: 0000000000000000     | 	.quad 0
0x558: 0000000000000000     | 	.quad 0
0x560: 0000000000000000     | 	.quad 0
0x568: 0000000000000000     | 	.quad 0
0x570: 0000000000000000     | 	.quad 0
0x578: 0000000000000000     | 	.quad 0
0x580: 0000000000000000     | 	.quad 0
0x588: 0000000000000000     | 	.quad 0
0x590: 0000000000000000     | 	.quad 0
                            | 
0x598:                      | Stack:
