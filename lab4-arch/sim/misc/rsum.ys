# Execution begins at address 0
    .pos 0
    irmovq stack, %rsp      # Set up stack pointer
    call main               # Execute main program
    halt                    # Terminate program

# Sample linked list
    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

main:
    irmovq ele1,%rdi
    call rsum_list
    ret

rsum_list:
    pushq %r9
    xorq %rax,%rax          # long val = 0
    andq %rdi,%rdi          # Set CC
    je return               # Goto return
    mrmovq (%rdi),%r9       # Get ls->val
    mrmovq 8(%rdi),%rdi     # ls = ls->next
    call rsum_list          # rest = rsum_list(ls->next)
    addq %r9,%rax           # val + rest
return:
    popq %r9
    ret

# Sets up stack
    .pos 0x200
stack:
